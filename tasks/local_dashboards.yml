---
- name: Setup local grafana dashboards
  become: no
  block:
    - name: Create local grafana dashboard directory
      tempfile:
        state: directory
      register: _tmp_dashboards
      changed_when: false
      check_mode: false

    - name: Copy dashboards
      copy:
        src: "dashboards/{{ dashboard.name }}_rev{{ dashboard.revision_id}}.json"
        dest: "{{ _tmp_dashboards.path }}/{{ dashboard.name }}_rev{{ dashboard.revision_id}}.json"
      when: dashboard.enabled
      check_mode: false

    - name: Set the correct data source name in the dashboard
      replace:
        dest: "{{ _tmp_dashboards.path }}/{{ dashboard.name }}_rev{{ dashboard.revision_id}}.json"
        regexp: '"(?:\${)?DS_[A-Z0-9_-]+(?:})?"'
        replace: '"{{ dashboard.datasource }}"'
      when: dashboard.enabled
      check_mode: false
  delegate_to: localhost
  run_once: true

- name: Import local grafana dashboards through the API
  grafana_dashboard:
    grafana_url: "{{ grafana_api_url }}"
    grafana_user: "{{ grafana_security.admin_user }}"
    grafana_password: "{{ grafana_security.admin_password }}"
    path: "{{ _tmp_dashboards.path }}/{{ item }}"
    message: Updated by ansible
    state: present
    overwrite: true
  no_log: true
  with_fileglob:
    - "{{ _tmp_dashboards.path }}/*.json"
  when: not grafana_use_provisioning

- name: Import local grafana dashboards through provisioning
  block:
    - name: Create/Update dashboards file (provisioning)
      become: true
      copy:
        dest: "{{ grafana_config_dir}}/provisioning/dashboards/ansible.yml"
        content: |
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            updateIntervalSeconds: 60
            options:
              path: "{{ grafana_data_dir }}/dashboards"
        backup: false
        owner: root
        group: "{{ grafana_group_user }}"
        mode: 0640
      notify: restart grafana

    - name: Register previously copied dashboards
      find:
        paths: "{{ grafana_data_dir }}/dashboards"
        hidden: true
        patterns:
          - "*.json"
      register: _dashboards_present
      when: grafana_provisioning_synced
  
    - name: Import grafana dashboards
      become: true
      copy:
        src: "{{ item }}"
        dest: "{{ grafana_data_dir }}/dashboards/{{ item | basename }}"
      with_fileglob:
        - "{{ _tmp_dashboards.path }}/*"
      register: _dashboards_copied
      notify: "provisioned dashboards changed"

    - name: Get dashboard lists
      set_fact:
        _dashboards_present_list: "{{ _dashboards_present | json_query('files[*].path') | default([]) }}"
        _dashboards_copied_list: "{{ _dashboards_copied | json_query('results[*].dest') | default([]) }}"
      when: grafana_provisioning_synced

    - name: Remove dashboards not present on deployer machine (synchronize)
      become: true
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ _dashboards_present_list | difference( _dashboards_copied_list ) }}"
      when: grafana_provisioning_synced
  when: grafana_use_provisioning
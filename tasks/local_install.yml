---
- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: Set systemd version fact
  set_fact:
    grafana_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"

- name: Allow to bind to port in SELinux
  seport:
    ports: "{{ grafana_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  when:
    - ansible_version.full is version_compare('2.4', '>=')
    - ansible_selinux.status == "enabled"

- name: create grafana system group
  group:
    name: grafana
    system: true
    state: present

- name: create grafana system user
  user:
    name: "{{ grafana_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ grafana_group_user }}"
    createhome: false
    home: "{{ grafana_data_dir }}"

- name: create systemd service unit
  template:
    src: grafana-server.service.j2
    dest: /etc/systemd/system/grafana-server.service
    owner: root
    group: root
    mode: 0644

- name: create grafana data directory
  file:
    path: "{{ grafana_data_dir }}"
    state: directory
    owner: "{{ grafana_system_user }}"
    group: "{{ grafana_group_user }}"
    mode: 0755

- name: download grafana binary to local folder
  become: false
  get_url:
    url: "{{ grafana_download_url }}/{{ grafana_version }}/grafana-{{ grafana_version }}.linux-amd64.tar.gz"
    dest: "/tmp/grafana-{{ grafana_version }}.linux-amd64.tar.gz"
    checksum: "sha256:{{ grafana_checksum | default(omit) }}"
    url_username: "{{ grafana_download_auth.username | default(omit) }}"
    url_password: "{{ grafana_download_auth.password | default(omit) }}"
    validate_certs: "{{ grafana_download_auth.validate_certs | default(True) }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  check_mode: false
  no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"

- name: unpack grafana binaries
  become: false
  unarchive:
    src: "/tmp/grafana-{{ grafana_version }}.linux-amd64.tar.gz"
    dest: /usr/share
  check_mode: false

- name: Create grafana binary symlinks
  file:
    src: "{{ grafana_home_dir }}/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
    state: link
  with_items:
    - grafana-server
    - grafana-cli
  notify:
    - restart grafana
